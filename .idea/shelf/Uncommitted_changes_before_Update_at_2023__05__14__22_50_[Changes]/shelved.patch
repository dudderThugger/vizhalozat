Index: src/Vizhalozat/Proto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Vizhalozat;\r\n\r\nimport javax.sound.midi.Soundbank;\r\nimport java.awt.print.PrinterException;\r\nimport java.io.Console;\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.InputStream;\r\nimport java.lang.reflect.Array;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Scanner;\r\n\r\n/**\r\n * Prototípus osztály megvalósítása\r\n */\r\npublic class Proto {\r\n    private HashMap<String, ProtoJatek> jatekAdatok = new HashMap<String, ProtoJatek>();\r\n    private ProtoJatek jelenlegiJatek = null;\r\n\r\n    /**\r\n     * Prototípusjáték\r\n     */\r\n    private class ProtoJatek {\r\n        Jatek jatek = new Jatek();\r\n        boolean randomKi;\r\n        HashMap<String, Jatekos> jatekosok = new HashMap<>();\r\n        HashMap<String, Szerelo> szerelok = new HashMap<>();\r\n        HashMap<String, Szabotor> szabotorok = new HashMap<>();\r\n        HashMap<String, Mezo> mezok = new HashMap<>();\r\n        HashMap<String, Cso> csovek = new HashMap<>();\r\n    }\r\n\r\n    private class ProtoException extends RuntimeException {}\r\n\r\n    public void parancsIndito() {\r\n        Scanner scanner = new Scanner(System.in);\r\n        System.out.println(\"Vizhalozat prototipusa\\n\\n\");\r\n        parancsKezelo(scanner);\r\n    }\r\n\r\n    public void parancsKezelo(Scanner scanner) {\r\n        while(scanner.hasNext()) {\r\n            String[] arguments = scanner.nextLine().split(\" \");\r\n            switch (arguments[0]) {\r\n                case \"JatekLetrehoz\":\r\n                    String ujJatekNeve = arguments[1];\r\n                    if (!jatekAdatok.containsKey(ujJatekNeve)) {\r\n                        jatekAdatok.put(ujJatekNeve, new ProtoJatek());\r\n                        System.out.println(ujJatekNeve + \" sikeresen letrehozva!\");\r\n                    } else {\r\n                        System.out.println(\"Nem sikerült létrehozni a játékot!\");\r\n                    }\r\n                    break;\r\n                case \"JatekKivalaszt\":\r\n                    String jatekNeve = arguments[1];\r\n                    if (jatekAdatok.containsKey(jatekNeve)) {\r\n                        jelenlegiJatek = jatekAdatok.get(jatekNeve);\r\n                        System.out.println(jatekNeve + \" kivalasztva!\");\r\n                    } else {\r\n                        System.out.println(\"Nem sikerült kivalasztani a játékot!\");\r\n                    }\r\n                    break;\r\n                case \"JatekKilep\":\r\n                    jelenlegiJatek = null;\r\n                    System.out.println(\"Kilepes\");\r\n                    break;\r\n                case \"Futtatas\": {\r\n                    File fajl = new File(arguments[1]);\r\n                    try {\r\n                        parancsKezelo(new Scanner(fajl));\r\n                    } catch (FileNotFoundException e) {\r\n                        System.out.println(\"Nem található a megadott fájl!\");\r\n                    }\r\n                    break;\r\n                }\r\n                case \"JatekosLetrehoz\":\r\n                    String ujJatekosNeve = arguments[1];\r\n                    String jatekosTipus = arguments[2];\r\n                    try {\r\n                        if (jelenlegiJatek == null) throw new ProtoException();\r\n                        if (jelenlegiJatek.jatekosok.containsKey(ujJatekosNeve)) throw new ProtoException();\r\n                        if (jatekosTipus.equals(\"szerelo\")) {\r\n                            Szerelo ujSzerelo = new Szerelo();\r\n                            jelenlegiJatek.jatek.addJatekos(ujSzerelo);\r\n                            jelenlegiJatek.jatekosok.put(ujJatekosNeve, ujSzerelo);\r\n                            jelenlegiJatek.szerelok.put(ujJatekosNeve, ujSzerelo);\r\n                        } else if (jatekosTipus.equals(\"szabotor\")) {\r\n                            Szabotor ujSzabotor = new Szabotor();\r\n                            jelenlegiJatek.jatek.addJatekos(ujSzabotor);\r\n                            jelenlegiJatek.jatekosok.put(ujJatekosNeve, ujSzabotor);\r\n                            jelenlegiJatek.szabotorok.put(ujJatekosNeve, ujSzabotor);\r\n                        } else {\r\n                            throw new ProtoException();\r\n                        }\r\n                        System.out.println(ujJatekosNeve + \" játékos sikeresen létrehozva!\");\r\n                    } catch (ProtoException e) {\r\n                        System.out.println(\"Nem sikerült letrehozni a játékost\");\r\n                    }\r\n                    break;\r\n                case \"MezoLetrehoz\": {\r\n                    String mezoNeve = arguments[1];\r\n                    String mezoTipusa = arguments[2];\r\n                    try {\r\n                        if (jelenlegiJatek == null) throw new ProtoException();\r\n                        if (jelenlegiJatek.mezok.containsKey(mezoNeve)) throw new ProtoException();\r\n                        if (mezoTipusa.equals(\"ciszterna\")) {\r\n                            Ciszterna ujCiszterna = new Ciszterna(jelenlegiJatek.jatek);\r\n                            jelenlegiJatek.jatek.addMezo(ujCiszterna);\r\n                            jelenlegiJatek.mezok.put(mezoNeve, ujCiszterna);\r\n                        } else if (mezoTipusa.equals(\"cso\")) {\r\n                            Cso ujCso = new Cso(jelenlegiJatek.jatek);\r\n                            jelenlegiJatek.jatek.addMezo(ujCso);\r\n                            jelenlegiJatek.mezok.put(mezoNeve, ujCso);\r\n                            jelenlegiJatek.csovek.put(mezoNeve, ujCso);\r\n                        } else if (mezoTipusa.equals(\"forras\")) {\r\n                            Forras ujForras = new Forras(jelenlegiJatek.jatek);\r\n                            jelenlegiJatek.jatek.addMezo(ujForras);\r\n                            jelenlegiJatek.mezok.put(mezoNeve, ujForras);\r\n                        } else if (mezoTipusa.equals(\"pumpa\")) {\r\n                            Pumpa ujPumpa = new Pumpa(jelenlegiJatek.jatek);\r\n                            jelenlegiJatek.jatek.addMezo(ujPumpa);\r\n                            jelenlegiJatek.mezok.put(mezoNeve, ujPumpa);\r\n                        } else {\r\n                            throw new ProtoException();\r\n                        }\r\n                        System.out.println(mezoNeve + \" mező sikeresen létrehozva!\");\r\n                    } catch (ProtoException e) {\r\n                        System.out.println(\"Nem sikerült létrehozni a mezőt!\");\r\n                    }\r\n                    break;\r\n                }\r\n                case \"SzomszedBeallit\":{\r\n                    String mezo1Neve = arguments[1];\r\n                    String mezo2Neve = arguments[2];\r\n                    try {\r\n                        if (jelenlegiJatek == null) throw new ProtoException();\r\n                        if (jelenlegiJatek.mezok.containsKey(mezo1Neve) && jelenlegiJatek.mezok.containsKey(mezo2Neve)) {\r\n                            Mezo mezo1 = jelenlegiJatek.mezok.get(mezo1Neve);\r\n                            Mezo mezo2 = jelenlegiJatek.mezok.get(mezo2Neve);\r\n                            mezo1.addSzomszed(mezo2);\r\n                            mezo2.addSzomszed(mezo1);\r\n                        } else {\r\n                            throw new ProtoException();\r\n                        }\r\n                        System.out.println(\"Szomszedság beállítva!\");\r\n                    } catch (ProtoException e) {\r\n                        System.out.println(\"Nem sikerült beállitani a szomszédokat!\");\r\n                    }\r\n                    break;\r\n            }\r\n            case \"RaAllit\": {\r\n                String jatekosNeve = arguments[1];\r\n                String mezoNeve = arguments[2];\r\n                try {\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n                    if (jelenlegiJatek.jatekosok.containsKey(jatekosNeve) && jelenlegiJatek.mezok.containsKey(mezoNeve)) {\r\n                        Jatekos j = jelenlegiJatek.jatekosok.get(jatekosNeve);\r\n                        Mezo m = jelenlegiJatek.mezok.get(mezoNeve);\r\n                        j.raAllit(m);\r\n                        System.out.println( jatekosNeve + \" ráállt a \" + mezoNeve + \" mezőre!\");\r\n                    } else {\r\n                        throw new ProtoException();\r\n                    }\r\n                } catch (ProtoException e) {\r\n                    System.out.println(\"Nem sikerült ráállítani a mezőre!\");\r\n                }\r\n                break;\r\n            }\r\n            case \"KezebeAd\": {\r\n                String jatekosNeve = arguments[1];\r\n                String mezoNeve = arguments[2];\r\n                try {\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n                    if (jelenlegiJatek.jatekosok.containsKey(jatekosNeve) && jelenlegiJatek.mezok.containsKey(mezoNeve)) {\r\n                        Jatekos j = jelenlegiJatek.jatekosok.get(jatekosNeve);\r\n                        Mezo m = jelenlegiJatek.mezok.get(mezoNeve);\r\n                        try {\r\n                            if(j.tart == null) j.add_Kezebe((Viheto) m);\r\n                            else throw new ProtoException();\r\n                            System.out.println(jatekosNeve + \" kezében \" + mezoNeve + \" van!\");\r\n                        } catch (ClassCastException ce) {\r\n                            System.out.println(\"Nem sikerült a kézbe adás!\");\r\n                        }\r\n                    } else {\r\n                        throw new ProtoException();\r\n                    }\r\n                } catch (ProtoException e) {\r\n                    System.out.println(\"Nem sikerült a kézbe adás!\");\r\n                }\r\n                break;\r\n            }\r\n            case \"Inditas\": {\r\n                try {\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n                    jelenlegiJatek.jatek.inditas();\r\n                    System.out.println(\"Start!\");\r\n                } catch (ProtoException e) {\r\n                    System.out.println(\"Nem sikerült elindítani a játékot!\");\r\n                }\r\n                break;\r\n            }\r\n            case \"Leallit\": {\r\n                try {\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n\r\n                    System.out.println(\"Game Over!\");\r\n                } catch (ProtoException e) {\r\n                    System.out.println(\"Nem sikerült leállítani a játékot!\");\r\n                }\r\n                break;\r\n            }\r\n            case \"Init\": {\r\n                try {\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n                    jelenlegiJatek.jatek.init();\r\n\r\n                    Szabotor szabotor1 = new Szabotor();\r\n                    Szabotor szabotor2 = new Szabotor();\r\n                    jelenlegiJatek.jatekosok.put(\"szabotor1\", szabotor1);\r\n                    jelenlegiJatek.jatekosok.put(\"szabotor2\", szabotor2);\r\n\r\n                    Szerelo szerelo1 = new Szerelo();\r\n                    Szerelo szerelo2 = new Szerelo();\r\n                    jelenlegiJatek.jatekosok.put(\"szerelo1\", szerelo1);\r\n                    jelenlegiJatek.jatekosok.put(\"szerelo2\", szerelo2);\r\n\r\n                    Forras forras1 = new Forras(jelenlegiJatek.jatek);\r\n                    Forras forras2 = new Forras(jelenlegiJatek.jatek);\r\n                    jelenlegiJatek.mezok.put(\"forras1\", forras1);\r\n                    jelenlegiJatek.mezok.put(\"forras2\", forras2);\r\n\r\n                    Ciszterna ciszterna1 = new Ciszterna(jelenlegiJatek.jatek);\r\n                    Ciszterna ciszterna2 = new Ciszterna(jelenlegiJatek.jatek);\r\n                    jelenlegiJatek.mezok.put(\"ciszterna1\", ciszterna1);\r\n                    jelenlegiJatek.mezok.put(\"ciszterna2\", ciszterna2);\r\n\r\n                    if (jelenlegiJatek.randomKi) {\r\n                        System.out.println(\"Inicializálás! \\n\" +\r\n                                \"A következő objektumok jöttek létre:\\n\" +\r\n                                \"szerelo1, szerelo2, szabotor1, szabotor2, forras1, forras2, ciszterna1, ciszterna 2\\n\");\r\n                    } else {\r\n                        System.out.println(\"Inicializálás! \\n\" +\r\n                                \"A következő objektumok jöttek létre:\\n\" +\r\n                                \"<létrejövő objektumok nevei>\\n\");\r\n                    }\r\n                } catch (ProtoException e) {\r\n                    System.out.println(\"Nem sikerült az inicializálás!\");\r\n                }\r\n                break;\r\n                }\r\n            case \"Leptet\":\r\n                String jatekosneve = arguments[1];\r\n                String mezoneve = arguments[2];\r\n                try {\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n                    if (jelenlegiJatek.mezok.containsKey(mezoneve) && jelenlegiJatek.jatekosok.containsKey(jatekosneve)) {\r\n                        Mezo mezo1 = jelenlegiJatek.mezok.get(mezoneve);\r\n                        Jatekos jatekos1 = jelenlegiJatek.jatekosok.get(jatekosneve);\r\n                        System.out.println(jatekosneve + \"rálépett a \" + mezoneve + \"mezőre!\");\r\n                    } else {\r\n                        throw new ProtoException();\r\n                    }\r\n\r\n                } catch (ProtoException e) {\r\n                    System.out.println(\"Nem sikerült a lépés!\");\r\n                }\r\n                break;\r\n            case \"Lyukaszt\":\r\n                String jatekosnev = arguments[1];\r\n                try {\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n                    if (jelenlegiJatek.jatekosok.containsKey(jatekosnev)) {\r\n                        Jatekos jatekos = jelenlegiJatek.jatekosok.get(jatekosnev);\r\n                        jatekos.lyukaszt();\r\n                        System.out.println(jatekosnev + \"kilyukasztotta a mezőt, amin áll!\");\r\n                    } else {\r\n                        throw new ProtoException();\r\n                    }\r\n                } catch (ProtoException e) {\r\n                    System.out.println(\"Nem sikerült a lyukasztás!\");\r\n                }\r\n                break;\r\n            case \"Foltoz\":\r\n                String szerelonev = arguments[1];\r\n                try {\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n                    if (jelenlegiJatek.szerelok.containsKey(szerelonev)) {\r\n                        Szerelo szerelo1 = jelenlegiJatek.szerelok.get(szerelonev);\r\n\r\n                        szerelo1.foltoz();\r\n                        System.out.println(szerelonev + \"befoltozta a mezőt, amin áll!\");\r\n                    } else {\r\n                        throw new ProtoException();\r\n                    }\r\n                } catch (ProtoException e) {\r\n                    System.out.println(\"Nem sikerült a befoltozas!\");\r\n                }\r\n                break;\r\n            case \"Ragaszt\":\r\n                String ragasztnev = arguments[1];\r\n                try {\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n                    if (jelenlegiJatek.szerelok.containsKey(ragasztnev)) {\r\n                        Jatekos jatekos1 = jelenlegiJatek.jatekosok.get(ragasztnev);\r\n\r\n                        jatekos1.ragaszt();\r\n                        System.out.println(ragasztnev + \"beragasztotta a mezőt, amin áll!\");\r\n                    } else {\r\n                        throw new ProtoException();\r\n                    }\r\n                } catch (ProtoException e) {\r\n                    System.out.println(\"Nem sikerült a mező beragasztása!\");\r\n                }\r\n                break;\r\n            case \"Vazelinez\":\r\n                String vazelineznev = arguments[1];\r\n                try {\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n                    if (jelenlegiJatek.szerelok.containsKey(vazelineznev)) {\r\n                        Szabotor jatekos1 = jelenlegiJatek.szabotorok.get(vazelineznev);\r\n\r\n                        jatekos1.csuszik();\r\n                        System.out.println(vazelineznev + \"csuszossa tette a mezőt, amin áll!\");\r\n                    } else {\r\n                        throw new ProtoException();\r\n                    }\r\n                } catch (ProtoException e) {\r\n                    System.out.println(\"Nem sikerült a vazelinezés!\");\r\n                }\r\n                break;\r\n            case \"PumpatAllit\":\r\n                String allitonev = arguments[1];\r\n                String bemeneticso = arguments[2];\r\n                String kimeneticso = arguments[3];\r\n                try{\r\n                    if(jelenlegiJatek==null)throw new ProtoException();\r\n                    if(jelenlegiJatek.szerelok.containsKey(allitonev)&& jelenlegiJatek.csovek.containsKey(bemeneticso)&&jelenlegiJatek.csovek.containsKey(kimeneticso)){\r\n                        Szerelo sz1 = jelenlegiJatek.szerelok.get(allitonev);\r\n                        Mezo m1 = sz1.rajtaAll;\r\n                        Cso csobe = jelenlegiJatek.csovek.get(bemeneticso);\r\n                        Cso csoki = jelenlegiJatek.csovek.get(kimeneticso);\r\n                        if(m1.szomszedok.contains(csobe)&&m1.szomszedok.contains(csoki)) {\r\n                            m1.atAllit(csobe, csoki);\r\n                            System.out.println(allitonev + \"atallitotta a pumpat, amin áll!\");\r\n                        }\r\n                    }else{\r\n                        throw new ProtoException();\r\n                    }\r\n                }catch (ProtoException e){\r\n                    System.out.println(\"Nem sikerült a pumpa állitása!\");\r\n                }\r\n                break;\r\n            case \"Javit\":\r\n                String javitnev = arguments[1];\r\n                try {\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n                    if (jelenlegiJatek.szerelok.containsKey(javitnev)) {\r\n                        Szerelo sz1 = jelenlegiJatek.szerelok.get(javitnev);\r\n                        sz1.foltoz();\r\n                        System.out.println(javitnev + \"megjavitotta a pumpat, amin allt\");\r\n                    } else {\r\n                        throw new ProtoException();\r\n                    }\r\n                }catch (ProtoException e){\r\n                    System.out.println(\"Nem sikerült a pumpa javítása!\");\r\n                }\r\n                break;\r\n            case \"PumpaElront\":\r\n                String pumpa = arguments[1];\r\n                try{\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n                    if(jelenlegiJatek.mezok.containsKey(pumpa)){\r\n                        Pumpa p = (Pumpa) jelenlegiJatek.mezok.get(pumpa);\r\n                        p.setMukodik(false);\r\n                        System.out.println(pumpa + \" nevű pumpa elromlott.\");\r\n                    }\r\n                    else{\r\n                        throw  new ProtoException();\r\n                    }\r\n                }catch (ProtoException e){\r\n                    System.out.println(\"Nem sikerült a pumpa elrontása!\");\r\n                }\r\n                break;\r\n            case \"CsoFelvesz\":\r\n                String lecsatlakozatoNev = arguments[1];\r\n                String lecsatlakoztatottCso = arguments[2];\r\n                try{\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n                    if(jelenlegiJatek.jatekosok.containsKey(lecsatlakozatoNev) && jelenlegiJatek.csovek.containsKey(lecsatlakoztatottCso)){\r\n                        Jatekos j = jelenlegiJatek.jatekosok.get(lecsatlakozatoNev);\r\n                        Cso cs = jelenlegiJatek.csovek.get(lecsatlakoztatottCso);\r\n                        j.felvesz_cso(cs);\r\n                        System.out.println(j + \" felvette a \" + cs + \" csövet!\");\r\n                    }\r\n                    else{\r\n                        throw new ProtoException();\r\n                    }\r\n\r\n                }catch (ProtoException e){\r\n                    System.out.println(\"Nem sikerült a cső felvétele!\");\r\n                }\r\n                break;\r\n            case \"CsoLerak\":\r\n                String lerakNev = arguments[1];\r\n                String lerakottMezo = arguments[2];\r\n                try{\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n                    if(jelenlegiJatek.jatekosok.containsKey(lerakNev) && jelenlegiJatek.mezok.containsKey(lerakottMezo)){\r\n                        Jatekos j = jelenlegiJatek.jatekosok.get(lerakNev);\r\n                        Mezo m = jelenlegiJatek.mezok.get(lerakottMezo);\r\n                        if(j.getRajtaAll().equals(m) && j.getTart() != null){\r\n                            j.lerak_cso();\r\n                            System.out.println(j + \" lerakta a kezében tartott csövet a \" + m +\" mezőre!\");\r\n                        }\r\n                        else{\r\n                            throw new ProtoException();\r\n                        }\r\n                    }\r\n                    else{\r\n                        throw new ProtoException();\r\n                    }\r\n                }catch (ProtoException e){\r\n                    System.out.println(\"Nem sikerült a cső lehelyezése!\");\r\n                }\r\n                break;\r\n            case \"PumpaVasarlas\":\r\n                String vasarlo = arguments[1];\r\n                try{\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n                    if(jelenlegiJatek.jatekosok.containsKey(vasarlo)){\r\n                        Szerelo sz = jelenlegiJatek.szerelok.get(vasarlo);\r\n                        sz.pumpatvesz();\r\n                        System.out.println(sz + \"vásárolt egy pumpát!\");\r\n                    }\r\n                    else{\r\n                        throw new ProtoException();\r\n                    }\r\n\r\n                }catch (ProtoException e){\r\n                    System.out.println(\"Nem sikerült a pumpa vásárlása!\");\r\n                }\r\n                break;\r\n            case \"PumpaLehelyez\":\r\n                String lehelyezo = arguments[1];\r\n                String lehelyezendoMezo = arguments[2];\r\n                try{\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n                    if(jelenlegiJatek.jatekosok.containsKey(lehelyezo) && jelenlegiJatek.mezok.containsKey(lehelyezendoMezo)){\r\n                        Szerelo sz = jelenlegiJatek.szerelok.get(lehelyezo);\r\n                        Mezo m = jelenlegiJatek.mezok.get(lehelyezendoMezo);\r\n                        if(sz.getRajtaAll().equals(m) && sz.getTart() != null){\r\n                            sz.lerak_pumpa();\r\n                            System.out.println(sz + \" lerakta a pumpát \" + m + \" mezőre!\");\r\n                        }\r\n                        else{\r\n                            throw new ProtoException();\r\n                        }\r\n                    }\r\n                    else{\r\n                        throw new ProtoException();\r\n                    }\r\n                }catch (ProtoException e){\r\n                    System.out.println(\"Nem sikerult a pumpa lehelyezése!\");\r\n                }\r\n                break;\r\n            case \"RandomBe\":\r\n                try{\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n                    jelenlegiJatek.randomKi = false;\r\n                    System.out.println(\"Random mód bekapcsolva\");\r\n                }catch (ProtoException e){\r\n                    System.out.println(\"Nem sikerult a random mód bekapcsolása!\");\r\n                }\r\n                break;\r\n            case \"RandomKi\":\r\n                try{\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n                    jelenlegiJatek.randomKi = true;\r\n                    jelenlegiJatek.jatek.setRandomKi(true);\r\n                    System.out.println(\"Random mód kikapcsolva\");\r\n                }catch (ProtoException e){\r\n                    System.out.println(\"Nem sikerult a random mód kikapcsolása!\");\r\n                }\r\n                break;\r\n            case \"Befolyik\":\r\n                String mezoneve1 = arguments[1];\r\n                try{\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n                    if(jelenlegiJatek.mezok.containsKey(mezoneve1)){\r\n                        Mezo m = jelenlegiJatek.mezok.get(mezoneve1);\r\n                        m.befolyik();\r\n                        System.out.println(m + \"-be befolyik a víz \");\r\n                        for (Mezo m1: m.getSzomszedok()) {\r\n                            System.out.println(m1 +  \"-be tovább folyt a víz!\");\r\n                        }\r\n                    }\r\n                }catch (ProtoException e){\r\n                    System.out.println(\"Nem sikerult!\");\r\n                }\r\n                break;\r\n            case \"Var\":\r\n                int msIdo = Integer.parseInt(arguments[1]);\r\n                try{\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n                    System.out.println(msIdo + \"ms varasa!\");\r\n                    try {\r\n                        Thread.sleep(msIdo);\r\n                    } catch (InterruptedException e) {\r\n                        throw new RuntimeException(e);\r\n                    }\r\n                    System.out.println(msIdo + \" varasa befejezodott!\");\r\n                }catch (ProtoException e){\r\n                    System.out.println(\"Nem sikerült varni!\");\r\n                }\r\n                break;\r\n            case \"Vizfolyas\":\r\n                try{\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n                    jelenlegiJatek.jatek.vizFolyas(jelenlegiJatek.randomKi);\r\n                    System.out.println(\"Elindult a viz!\");\r\n                }catch (ProtoException e){\r\n                    System.out.println(\"Nem sikerült!\");\r\n                }\r\n                break;\r\n            case \"BeallitCso\":\r\n                String csoNeve = arguments[1];\r\n                boolean lyukase = arguments[2].equalsIgnoreCase(\"igen\");\r\n                boolean ragade = arguments[3].equalsIgnoreCase(\"igen\");\r\n                boolean csuszike = arguments[4].equalsIgnoreCase(\"igen\");\r\n                int msLyukasztasIdo = Integer.parseInt(arguments[5]);\r\n                String ragasztottaNeve = arguments[6];\r\n                try{\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n                    if(jelenlegiJatek.mezok.containsKey(csoNeve)) {\r\n                        Cso cso1 = (Cso) jelenlegiJatek.mezok.get(csoNeve);\r\n                        cso1.lyukas = lyukase;\r\n                        cso1.ragad = ragade;\r\n                        cso1.csuszik = csuszike;\r\n                        cso1.lyukasztasiIdo = msLyukasztasIdo;\r\n                        if(jelenlegiJatek.jatekosok.containsKey(ragasztottaNeve)) cso1.ragasztotta = jelenlegiJatek.jatekosok.get(ragasztottaNeve);\r\n                        System.out.println(csoNeve + \" állapota sikeresen beállítva: \" + \"lyukas: \" + (lyukase ? \"igen \" : \"nem \") + \"ragad: \" + (ragade ? \"igen \" : \"nem \")\r\n                                + \"csúszik: \" + (csuszike ? \"igen \" : \"nem \") + \"lyukasztási idő: \" + msLyukasztasIdo +  \" ragasztotta: \" + ragasztottaNeve);\r\n                    }\r\n                }catch (ProtoException e){\r\n                    System.out.println(\"Nem sikerült a cső beállítása!\");\r\n                }\r\n                break;\r\n            case \"Pumpaszerkesztes\":\r\n                String pumpaNeve = arguments[1];\r\n                String csoKimenet = arguments[2];\r\n                String csoBemenet = arguments[3];\r\n                try{\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n                    if(jelenlegiJatek.mezok.containsKey(pumpaNeve)) {\r\n                        Pumpa pumpa1 = (Pumpa) jelenlegiJatek.mezok.get(pumpaNeve);\r\n                        Cso kimenet = null;\r\n                        Cso bemenet = null;\r\n                        for (Mezo cs1 : pumpa1.getSzomszedok()) {\r\n                            if(cs1.equals((Cso) jelenlegiJatek.mezok.get(csoKimenet))) kimenet = (Cso) jelenlegiJatek.mezok.get(csoKimenet);\r\n                            else if( cs1.equals((Cso) jelenlegiJatek.mezok.get(csoBemenet))) bemenet = (Cso) jelenlegiJatek.mezok.get(csoBemenet);\r\n                        }\r\n                        pumpa1.atAllit(bemenet, kimenet);\r\n                        System.out.println(pumpaNeve + \" beállítva!\");\r\n                    }\r\n                }catch (ProtoException e){\r\n                    System.out.println(\"Nem sikerült beállítani!\");\r\n                }\r\n                break;\r\n            case \"Nedvese\":\r\n                String mezoNeve = arguments[1];\r\n                try{\r\n                    if (jelenlegiJatek == null) throw new ProtoException();\r\n                    if(jelenlegiJatek.mezok.containsKey(mezoNeve)) {\r\n                        Mezo mezo = jelenlegiJatek.mezok.get(mezoNeve);\r\n                        Boolean telitett = mezo.getTelitett();\r\n                        if(telitett) System.out.println(\"A mezo telitett!\");\r\n                        else System.out.println(\"A mezo telitetlen!\");\r\n                    }\r\n                }catch (ProtoException e){\r\n                    System.out.println(\"Nem sikerult a lekérdezés!\");\r\n                }\r\n                break;\r\n            default:\r\n                System.out.println(\"Nem megfelelő formátum!\");\r\n                break;\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Vizhalozat/Proto.java b/src/Vizhalozat/Proto.java
--- a/src/Vizhalozat/Proto.java	(revision 0c747a461ac3af2cd5788f722789058a998dd283)
+++ b/src/Vizhalozat/Proto.java	(date 1684096673511)
@@ -238,11 +238,7 @@
                     if (jelenlegiJatek.randomKi) {
                         System.out.println("Inicializálás! \n" +
                                 "A következő objektumok jöttek létre:\n" +
-                                "szerelo1, szerelo2, szabotor1, szabotor2, forras1, forras2, ciszterna1, ciszterna 2\n");
-                    } else {
-                        System.out.println("Inicializálás! \n" +
-                                "A következő objektumok jöttek létre:\n" +
-                                "<létrejövő objektumok nevei>\n");
+                                "szerelo1, szerelo2, szabotor1, szabotor2, forras1, forras2, ciszterna1, ciszterna 2");
                     }
                 } catch (ProtoException e) {
                     System.out.println("Nem sikerült az inicializálás!");
Index: tesztek/teszt1.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>JatekLetrehoz
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tesztek/teszt1.txt b/tesztek/teszt1.txt
--- a/tesztek/teszt1.txt	(revision 0c747a461ac3af2cd5788f722789058a998dd283)
+++ b/tesztek/teszt1.txt	(date 1684096365010)
@@ -1,1 +1,12 @@
-JatekLetrehoz
\ No newline at end of file
+JatekLetrehoz jatek1
+JatekKivalaszt jatek1
+RandomKi
+Init
+RandomBe
+MezoLetrehoz cso1 cso
+SzomszedBeallit cso1 forras1
+MezoLetrehoz pumpa1 pumpa
+SzomszedBeallit cso1 pumpa1
+BeallitCso cso1 nem nem igen 0 szerelo1
+RaAllit szerelo1 forras1
+Leptet szerelo1 cso1
\ No newline at end of file
Index: tesztek/teszt5.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tesztek/teszt5.txt b/tesztek/teszt5.txt
new file mode 100644
--- /dev/null	(date 1684096148974)
+++ b/tesztek/teszt5.txt	(date 1684096148974)
@@ -0,0 +1,8 @@
+JatekLetrehoz jatek1
+JatekKivalaszt jatek1
+RandomKi
+Init
+MezoLetrehoz cso1 cso
+SzomszedBeallit cso1 ciszterna1
+Raallit szerelo1 cso1
+Leptet szerelo1 ciszterna1
Index: tesztek/teszt3.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tesztek/teszt3.txt b/tesztek/teszt3.txt
new file mode 100644
--- /dev/null	(date 1684096149009)
+++ b/tesztek/teszt3.txt	(date 1684096149009)
@@ -0,0 +1,9 @@
+JatekLetrehoz jatek1
+JatekKivalaszt jatek1
+RandomKi
+Init
+MezoLetrehoz cso1 cso
+SzomszedBeallit cso1 forras1
+BeallitCso nem igen nem 0 nem
+Raallit szerelo1 cso1
+Leptet szerelo1 forras1
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"42eca659-eca3-45a1-802e-11296cb13373\" name=\"Changes\" comment=\"proto elkezdése első 3 osztály és első 7 parancs\">\r\n      <change afterPath=\"$PROJECT_DIR$/tesztek/teszt1.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023__05__14__12_14__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023__05__14__12_14__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023__05__14__9_56__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023__05__14__9_56__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023__05__14__9_56__Changes_1.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023__05__14__9_56__Changes_1.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Vizhalozat/Cso.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Vizhalozat/Cso.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Vizhalozat/Forras.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Vizhalozat/Forras.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Vizhalozat/Jatek.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Vizhalozat/Jatek.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Vizhalozat/Jatekos.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Vizhalozat/Jatekos.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Vizhalozat/Mezo.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Vizhalozat/Mezo.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Vizhalozat/Proto.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Vizhalozat/Proto.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Vizhalozat/Pumpa.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Vizhalozat/Pumpa.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/teszt.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/teszt.txt\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2OPjhpCATCZ3MLgG7nsG1xmDBF6\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Szelestey\\IdeaProjects\\Vizhalozat\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"App\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Vizhalozat.App\" />\r\n      <module name=\"Vizhalozat\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"42eca659-eca3-45a1-802e-11296cb13373\" name=\"Changes\" comment=\"\" />\r\n      <created>1681469248739</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1681469248739</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"elso commit\">\r\n      <created>1681469342419</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681469342420</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"masodik\">\r\n      <created>1681469449647</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681469449647</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"szkeleton, félig kész osztályok\">\r\n      <created>1681475786680</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681475786680</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"javitas\">\r\n      <created>1681476055212</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681476055212</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"69 kilepes\">\r\n      <created>1681476354109</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681476354109</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"16-17-es teszt esetek elkészítése\">\r\n      <created>1681598772351</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681598772351</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Szabotor osztaly\">\r\n      <created>1681598949648</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681598949648</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"20-as teszt eset elkészítése\">\r\n      <created>1681601609432</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681601609432</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"18-as teszt eset elkészítése\">\r\n      <created>1681603519626</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681603519626</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"19-es teszt eset elkészítése\">\r\n      <created>1681604676023</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681604676023</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"első 20 teszt fasza, minimális javítások\">\r\n      <created>1681670843667</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681670843667</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"kommentek csőnél\">\r\n      <created>1681675334635</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681675334635</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"kommentek csőnél\">\r\n      <created>1681675455800</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681675455800</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"szkeleton kommentezése\">\r\n      <created>1681676699224</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681676699224</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"szkeleton kommentezése\">\r\n      <created>1681676745972</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681676745972</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"&#10;Push hogy mas ne kezdje el ami mar meglehet\">\r\n      <created>1684005333841</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684005333841</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"Utolso parancsok\">\r\n      <created>1684068524084</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684068524084</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"18\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"origin/master\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"elso commit\" />\r\n    <MESSAGE value=\"masodik\" />\r\n    <MESSAGE value=\"szkeleton, félig kész osztályok\" />\r\n    <MESSAGE value=\"javitas\" />\r\n    <MESSAGE value=\"69 kilepes\" />\r\n    <MESSAGE value=\"16-17-es teszt esetek elkészítése\" />\r\n    <MESSAGE value=\"Szabotor osztaly\" />\r\n    <MESSAGE value=\"20-as teszt eset elkészítése\" />\r\n    <MESSAGE value=\"18-as teszt eset elkészítése\" />\r\n    <MESSAGE value=\"19-es teszt eset elkészítése\" />\r\n    <MESSAGE value=\"első 20 teszt fasza, minimális javítások\" />\r\n    <MESSAGE value=\"kommentek csőnél\" />\r\n    <MESSAGE value=\"szkeleton kommentezése\" />\r\n    <MESSAGE value=\"&#10;Push hogy mas ne kezdje el ami mar meglehet\" />\r\n    <MESSAGE value=\"Utolso parancsok\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Utolso parancsok\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.StackOverflowError\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n    <watches-manager>\r\n      <configuration name=\"Application\">\r\n        <watch expression=\"jelenlegiJatek.mezok\" language=\"JAVA\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 0c747a461ac3af2cd5788f722789058a998dd283)
+++ b/.idea/workspace.xml	(date 1684097298657)
@@ -4,20 +4,14 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="42eca659-eca3-45a1-802e-11296cb13373" name="Changes" comment="proto elkezdése első 3 osztály és első 7 parancs">
-      <change afterPath="$PROJECT_DIR$/tesztek/teszt1.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023__05__14__12_14__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023__05__14__12_14__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023__05__14__9_56__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023__05__14__9_56__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023__05__14__9_56__Changes_1.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023__05__14__9_56__Changes_1.xml" afterDir="false" />
+    <list default="true" id="42eca659-eca3-45a1-802e-11296cb13373" name="Changes" comment="faszkodás">
+      <change afterPath="$PROJECT_DIR$/tesztek/teszt2.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/tesztek/teszt3.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/tesztek/teszt4.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/tesztek/teszt5.txt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Vizhalozat/Cso.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Vizhalozat/Cso.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Vizhalozat/Forras.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Vizhalozat/Forras.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Vizhalozat/Jatek.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Vizhalozat/Jatek.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Vizhalozat/Jatekos.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Vizhalozat/Jatekos.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Vizhalozat/Mezo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Vizhalozat/Mezo.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Vizhalozat/Proto.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Vizhalozat/Proto.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Vizhalozat/Pumpa.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Vizhalozat/Pumpa.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/teszt.txt" beforeDir="false" afterPath="$PROJECT_DIR$/teszt.txt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/tesztek/teszt1.txt" beforeDir="false" afterPath="$PROJECT_DIR$/tesztek/teszt1.txt" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -43,16 +37,17 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "git-widget-placeholder": "master",
+    "last_opened_file_path": "C:/Users/Szelestey/IdeaProjects/Vizhalozat",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "run.code.analysis.last.selected.profile": "pProject Default"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="MoveFile.RECENT_KEYS">
       <recent name="C:\Users\Szelestey\IdeaProjects\Vizhalozat" />
@@ -195,7 +190,14 @@
       <option name="project" value="LOCAL" />
       <updated>1684068524084</updated>
     </task>
-    <option name="localTasksCounter" value="18" />
+    <task id="LOCAL-00018" summary="faszkodás">
+      <created>1684095892755</created>
+      <option name="number" value="00018" />
+      <option name="presentableId" value="LOCAL-00018" />
+      <option name="project" value="LOCAL" />
+      <updated>1684095892755</updated>
+    </task>
+    <option name="localTasksCounter" value="19" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -237,7 +239,8 @@
     <MESSAGE value="szkeleton kommentezése" />
     <MESSAGE value="&#10;Push hogy mas ne kezdje el ami mar meglehet" />
     <MESSAGE value="Utolso parancsok" />
-    <option name="LAST_COMMIT_MESSAGE" value="Utolso parancsok" />
+    <MESSAGE value="faszkodás" />
+    <option name="LAST_COMMIT_MESSAGE" value="faszkodás" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
Index: tesztek/teszt4.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tesztek/teszt4.txt b/tesztek/teszt4.txt
new file mode 100644
--- /dev/null	(date 1684096148983)
+++ b/tesztek/teszt4.txt	(date 1684096148983)
@@ -0,0 +1,10 @@
+JatekLetrehoz jatek1
+JatekKivalaszt jatek1
+RandomKi
+Init
+MezoLetrehoz cso1 cso
+SzomszedBeallit cso1 forras1
+MezoLetrehoz pumpa1 pumpa
+SzomszedBeallit cso1 pumpa1
+Raallit szerelo1 cso1
+Leptet szerelo1 pumpa1
Index: tesztek/teszt2.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tesztek/teszt2.txt b/tesztek/teszt2.txt
new file mode 100644
--- /dev/null	(date 1684096673532)
+++ b/tesztek/teszt2.txt	(date 1684096673532)
@@ -0,0 +1,8 @@
+JatekLetrehoz jatek1
+JatekKivalaszt jatek1
+RandomKi
+Init
+MezoLetrehoz cso1 cso
+SzomszedBeallit cso1 forras1
+RaAllit szerelo1 forras1
+Leptet szerelo1 cso1
